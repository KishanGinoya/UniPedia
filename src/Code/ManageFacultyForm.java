package Code;


import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import java.awt.Font;
import javax.swing.table.*;

public class ManageFacultyForm extends javax.swing.JFrame {

    /**
     * Creates new form ManageFacultyForm
     */
    Faculty f = new Faculty();
    public ManageFacultyForm() {
        initComponents();
        
        f.fillFacultyJTable(Jtable_faculty, "");
      
        Jtable_faculty.setRowHeight(40);
        Jtable_faculty.setShowGrid(true);
        Jtable_faculty.setGridColor(Color.BLUE);
        Jtable_faculty.setSelectionBackground(Color.BLACK);
        
        // Set custom table header font and size
        JTableHeader header = Jtable_faculty.getTableHeader();
        header.setFont(header.getFont().deriveFont(Font.BOLD, 16)); 
        
        // Center-align column headers
        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) Jtable_faculty.getTableHeader().getDefaultRenderer();    
        renderer.setHorizontalAlignment(JLabel.CENTER);
        
        // Set header height
        header.setPreferredSize(new Dimension(header.getWidth(), 30)); 
        
         // Set border for the table
        Border border = BorderFactory.createLineBorder(Color.GRAY, 2);
        Jtable_faculty.setBorder(border);
        
         // Set border for the header
        header.setBorder(border);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cb_program = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cb_course = new javax.swing.JComboBox<>();
        lbl_course = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_fid = new javax.swing.JTextField();
        lbl_snm = new javax.swing.JLabel();
        lbl_fnm = new javax.swing.JLabel();
        txt_tnm = new javax.swing.JTextField();
        txt_fnm = new javax.swing.JTextField();
        lbl_gender = new javax.swing.JLabel();
        lbl_dob = new javax.swing.JLabel();
        lbl_email = new javax.swing.JLabel();
        lbl_mob = new javax.swing.JLabel();
        lbl_address = new javax.swing.JLabel();
        txt_mob = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        txt_address = new javax.swing.JTextField();
        rdmale = new javax.swing.JRadioButton();
        rdfemale = new javax.swing.JRadioButton();
        txt_dob = new com.toedter.calendar.JDateChooser();
        btn_add = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Jtable_faculty = new javax.swing.JTable();
        lbl_search = new javax.swing.JLabel();
        txt_search = new javax.swing.JTextField();
        btn_delete = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        panel_back = new javax.swing.JPanel();
        lbl_back = new javax.swing.JLabel();
        panel_logout = new javax.swing.JPanel();
        lbl_logout1 = new javax.swing.JLabel();
        btn_clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 255, 204));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Program : ");

        cb_program.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cb_program.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Program", "BCA", "BBA" }));
        cb_program.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_programActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Course :");

        cb_course.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cb_course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_courseActionPerformed(evt);
            }
        });

        lbl_course.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbl_course.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_course.setText("Manage Faculty");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Faculty ID");

        txt_fid.setEditable(false);
        txt_fid.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        lbl_snm.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_snm.setText("Faculty's Name");

        lbl_fnm.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_fnm.setText("Father's Name");

        txt_tnm.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_tnm.setToolTipText("");

        txt_fnm.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        lbl_gender.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_gender.setText("Gender");

        lbl_dob.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_dob.setText("Date Of Birth");

        lbl_email.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_email.setText("Email:");

        lbl_mob.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_mob.setText("Mobile No");

        lbl_address.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_address.setText("Address");

        txt_mob.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        txt_email.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        txt_address.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        buttonGroup1.add(rdmale);
        rdmale.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdmale.setText("Male");
        rdmale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdmaleActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdfemale);
        rdfemale.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdfemale.setText("Female");

        txt_dob.setToolTipText("");
        txt_dob.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btn_add.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_add.setText("Add");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        Jtable_faculty.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Jtable_faculty.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Program", "Course", "Faculty Name", "Father Name", "Gender", "DOB", "Email", "MobileNo", "Address"
            }
        ));
        Jtable_faculty.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Jtable_facultyMouseClicked(evt);
            }
        });
        Jtable_faculty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Jtable_facultyKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(Jtable_faculty);

        lbl_search.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_search.setText("Enter Value to Search: ");

        txt_search.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_searchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_searchKeyTyped(evt);
            }
        });

        btn_delete.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_edit.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        btn_cancel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        panel_back.setBackground(new java.awt.Color(0, 102, 102));

        lbl_back.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbl_back.setForeground(new java.awt.Color(255, 255, 255));
        lbl_back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/back-button.png"))); // NOI18N
        lbl_back.setText("   Back");
        lbl_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_backMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_backMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_backMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panel_backLayout = new javax.swing.GroupLayout(panel_back);
        panel_back.setLayout(panel_backLayout);
        panel_backLayout.setHorizontalGroup(
            panel_backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
            .addGroup(panel_backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_backLayout.createSequentialGroup()
                    .addContainerGap(40, Short.MAX_VALUE)
                    .addComponent(lbl_back, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(24, Short.MAX_VALUE)))
        );
        panel_backLayout.setVerticalGroup(
            panel_backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 91, Short.MAX_VALUE)
            .addGroup(panel_backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_backLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_back)
                    .addContainerGap(14, Short.MAX_VALUE)))
        );

        panel_logout.setBackground(new java.awt.Color(0, 102, 102));

        lbl_logout1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbl_logout1.setForeground(new java.awt.Color(255, 255, 255));
        lbl_logout1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        lbl_logout1.setText("   Logout");
        lbl_logout1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_logout1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_logout1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_logout1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout panel_logoutLayout = new javax.swing.GroupLayout(panel_logout);
        panel_logout.setLayout(panel_logoutLayout);
        panel_logoutLayout.setHorizontalGroup(
            panel_logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
            .addGroup(panel_logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel_logoutLayout.createSequentialGroup()
                    .addGap(0, 42, Short.MAX_VALUE)
                    .addComponent(lbl_logout1)
                    .addGap(0, 43, Short.MAX_VALUE)))
        );
        panel_logoutLayout.setVerticalGroup(
            panel_logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 91, Short.MAX_VALUE)
            .addGroup(panel_logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel_logoutLayout.createSequentialGroup()
                    .addGap(0, 13, Short.MAX_VALUE)
                    .addComponent(lbl_logout1)
                    .addGap(0, 14, Short.MAX_VALUE)))
        );

        btn_clear.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(txt_fid, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(lbl_address))
                                .addGap(64, 64, 64)
                                .addComponent(cb_program, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbl_snm, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbl_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(rdmale, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(rdfemale, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(lbl_fnm)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_fnm, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_tnm, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(83, 83, 83)
                                        .addComponent(cb_course, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(150, 150, 150)
                                .addComponent(txt_address, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_dob)
                                    .addComponent(lbl_email)
                                    .addComponent(lbl_mob))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_mob, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 939, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(460, 460, 460)
                                .addComponent(lbl_search, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(314, 314, 314)
                                .addComponent(lbl_course, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38)
                        .addComponent(panel_back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel_logout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_course, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_search, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txt_fid, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(panel_back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(panel_logout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(4, 4, 4)))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_program, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cb_course, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_snm, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_tnm, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_fnm)
                            .addComponent(txt_fnm, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_gender)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rdfemale, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rdmale, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_dob)
                            .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_email))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_mob, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_mob))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_address)
                            .addComponent(txt_address, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_programActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_programActionPerformed
           
        String selectedProgram = (String) cb_program.getSelectedItem();
        DefaultComboBoxModel<String> courseModel = new DefaultComboBoxModel<>(); 
        
        Connection con = MyConnection.getConnection();

       
        try{
            String query = "SELECT c1, c2, c3, c4 FROM coursedetails WHERE program = ?";
            PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1, selectedProgram);
             
            ResultSet rs = ps.executeQuery();
              if (rs.next()) {
            do {
                // Add each unique course to the model if it's not null and not already added
                String c1 = rs.getString("c1");
                if (c1 != null && courseModel.getIndexOf(c1) == -1) {
                    courseModel.addElement(c1);
                }

                String c2 = rs.getString("c2");
                if (c2 != null && courseModel.getIndexOf(c2) == -1) {
                    courseModel.addElement(c2);
                }

                String c3 = rs.getString("c3");
                if (c3 != null && courseModel.getIndexOf(c3) == -1) {
                    courseModel.addElement(c3);
                }

                String c4 = rs.getString("c4");
                if (c4 != null && courseModel.getIndexOf(c4) == -1) {
                    courseModel.addElement(c4);
                }
            } while (rs.next()); // Continue processing subsequent rows
        }
            
        } catch (SQLException e) {
                String errorMessage = "<html><b style='font-size: 12px;'>" + e.getMessage() + "</b></html>";
                JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            }

       // Set the model for the course dropdown
       cb_course.setModel(courseModel);
    
    
       
    }//GEN-LAST:event_cb_programActionPerformed

    private void cb_courseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_courseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_courseActionPerformed

    public boolean verifyText() {
        String tname = txt_tnm.getText();
        String fname = txt_fnm.getText();
        String email = txt_email.getText();
        String mobileno = txt_mob.getText();
        String address = txt_address.getText();
        //String id = txt_sid.getText();
         
       // Check if any of the required fields is empty
        if (tname.isEmpty() || fname.isEmpty() ||  email.isEmpty() || mobileno.isEmpty() || address.isEmpty() || txt_dob.getDate() == null) {
            String errorMessage = "<html><b style='font-size: 12px;'>Please fill in all the required fields...</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            return false; // At least one required field is empty
        }

        // Choose a date higher than the current date
        /*
        if(txt_dob.getDate().compareTo(new Date()) > 0){
            String errorMessage = "<html><b style='font-size: 12px;'>No Student From The Future are allowed...</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.ERROR_MESSAGE);
            return false; // dob number is not a valid integer
        }*/
        
        // Check if date of birth is valid (faculty are required to be at least 24 years old)
       
        Calendar currentDateMinus24 = new GregorianCalendar();
        currentDateMinus24.add(Calendar.YEAR, -24);

        Calendar dob = new GregorianCalendar();
        dob.setTime(txt_dob.getDate());

        if (dob.after(currentDateMinus24)) {
            String errorMessage = "<html><b style='font-size: 12px;'>No Faculty Under 24 Years Old are allowed...</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            return false; // Date of birth is not valid
        }
        
         // Check if email address is valid or not
         
        if(!email.matches("^[a-zA-Z0-9.-_]+@[a-zA-Z0-9-]+\\.[a-zA-Z.]{2,5}$"))
        {
            String errorMessage = "<html><b style='font-size: 12px;'>Invalid Email. Please enter a valid Email Address..</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            return false; // Email is not valid
        }
         
         
         //Check if mobileno is a valid Indian mobile number
        if (!mobileno.matches("^[6-9][0-9]{9}$")) {
            String errorMessage = "<html><b style='font-size: 12px;'>Invalid mobile number. Please enter a valid Indian mobile number.</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            return false; // Mobile number is not valid
        }

        return true; // All required fields are non-empty
        
      }
    
    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
         if(verifyText())
        {
            String email = txt_email.getText();
            String mobileno = txt_mob.getText();

            // Check if email or mobile number already exists
            boolean emailExists = f.isEmailExist(null, email);
            boolean mobileNoExists = f.isMobileNoExist(null, mobileno);

            if (!(emailExists || mobileNoExists))
            {
                String program = cb_program.getSelectedItem().toString();
                String course= cb_course.getSelectedItem().toString();
                String tname = txt_tnm.getText();
                String fname = txt_fnm.getText();
                String address = txt_address.getText();

                String gender="";
                if(rdmale.isSelected()){
                    gender=rdmale.getText();
                }
                else{
                    gender=rdfemale.getText();
                }

                SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd");
                String bdate = dateformat.format(txt_dob.getDate());

                // Check if the course is already assigned to another faculty
                if (f.isCourseAssigned(null, course)) {
                    String message = "<html><b style='font-size: 12px;'>Course is already assigned to another faculty...</b></html>";
                    JOptionPane.showMessageDialog(null, message, "Error", JOptionPane.WARNING_MESSAGE);
                    return; 
                }
            
                Faculty f = new Faculty();
                f.insertUpdateDeleteFaculty('i', null, program, course, tname, fname, gender, bdate, email, mobileno, address);
                DefaultTableModel model = (DefaultTableModel) Jtable_faculty.getModel();
                model.setRowCount(0); //Clear existing rows
                f.fillFacultyJTable(Jtable_faculty, "");
               
                // Clear all input fields after successful addition
                clearFields();

            }
            else {
                // Display error message based on existing email or mobile number
                String errorMessage = "<html><b style='font-size: 12px;'>";
                if (emailExists) {
                    errorMessage += "Email already exists.";
                }
                if (mobileNoExists) {
                    errorMessage += "<br>Mobile number already exists.";
                }
                errorMessage += "</b></html>";
                JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            }
        }

    }//GEN-LAST:event_btn_addActionPerformed

     //Clear all input fields
        private void clearFields() {
            //txt_fid.setText("");
            txt_tnm.setText("");
            txt_fnm.setText("");
            txt_email.setText("");
            txt_mob.setText("");
            txt_address.setText("");   
           // cb_program.setSelectedIndex(0); 
           // cb_course.setSelectedIndex(0); 
            buttonGroup1.clearSelection();
            txt_dob.setDate(null); 
            
             // Check if the ComboBoxModel is not empty before setting the selected index
                if (cb_program.getItemCount() > 0) {
                    cb_program.setSelectedIndex(0); 
                }

                // Check if the ComboBoxModel for cb_course is not empty before setting the selected index
                if (cb_course.getItemCount() > 0) {
                    cb_course.setSelectedIndex(0); 
                }
        }
    
    private int selectedRowIndex = -1;
    private void Jtable_facultyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Jtable_facultyMouseClicked

        int rowIndex = Jtable_faculty.getSelectedRow();
        // Check if the row index is already selected
        if (rowIndex == selectedRowIndex) {
            // Deselect the row
            Jtable_faculty.getSelectionModel().clearSelection();
            // Clear form data
            clearFields();
            // Reset selectedRowIndex
            selectedRowIndex = -1;
        } 
        else{
        DefaultTableModel model = (DefaultTableModel)Jtable_faculty.getModel();
        if(model.getValueAt(rowIndex, 5).toString().equals("Male"))
        {
            rdmale.setSelected(true);
            rdfemale.setSelected(false);
        }
        else
        {
            rdfemale.setSelected(true);
            rdmale.setSelected(false);
        }

        txt_fid.setText (model.getValueAt(rowIndex, 0).toString());
        cb_program.setSelectedItem(model.getValueAt(rowIndex, 1).toString());
        cb_course.setSelectedItem(model.getValueAt(rowIndex, 2).toString());
        txt_tnm.setText (model.getValueAt(rowIndex, 3).toString());
        txt_fnm.setText (model.getValueAt(rowIndex, 4).toString());
        txt_email.setText (model.getValueAt(rowIndex, 7).toString());
        txt_mob.setText (model.getValueAt(rowIndex, 8).toString());
        txt_address.setText (model.getValueAt(rowIndex, 9).toString());

        // Date bdate;

        try {
            String dobValue = model.getValueAt(rowIndex, 6).toString();
            if (dobValue != null && !dobValue.isEmpty()) {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                java.util.Date bdate = dateFormat.parse(dobValue);
                txt_dob.setDate(bdate);
            } else {
                txt_dob.setDate(null); // Set to null or handle empty date as needed
            }
        } catch (ParseException e) {
            String errorMessage = "<html><b style='font-size: 12px;'>" + e.getMessage() + "</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
        }
        // Set selectedRowIndex
        selectedRowIndex = rowIndex;
    }
        
    }//GEN-LAST:event_Jtable_facultyMouseClicked

    private void Jtable_facultyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtable_facultyKeyReleased

        int rowIndex = Jtable_faculty.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)Jtable_faculty.getModel();

        if(evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN)
        {

            if(model.getValueAt(rowIndex, 5).toString().equals("Male"))
            {
                rdmale.setSelected(true);
                rdfemale.setSelected(false);
            }
            else
            {
                rdfemale.setSelected(true);
                rdmale.setSelected(false);
            }   

            txt_fid.setText (model.getValueAt(rowIndex, 0).toString());
            cb_program.setSelectedItem(model.getValueAt(rowIndex, 1).toString());
            cb_course.setSelectedItem(model.getValueAt(rowIndex, 2).toString());
            txt_tnm.setText (model.getValueAt(rowIndex, 3).toString());
            txt_fnm.setText (model.getValueAt(rowIndex, 4).toString());
            txt_email.setText (model.getValueAt(rowIndex, 7).toString());
            txt_mob.setText (model.getValueAt(rowIndex, 8).toString());
            txt_address.setText (model.getValueAt(rowIndex, 9).toString());

            // Date bdate;

            try {
                String dobValue = model.getValueAt(rowIndex, 6).toString();
                if (dobValue != null && !dobValue.isEmpty()) {
                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                    java.util.Date bdate = dateFormat.parse(dobValue);
                    txt_dob.setDate(bdate);
                } else {
                    txt_dob.setDate(null); // Set to null or handle empty date as needed
                }
            } catch (ParseException e) {
                String errorMessage = "<html><b style='font-size: 12px;'>" + e.getMessage() + "</b></html>";
                JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            }

        }
    }//GEN-LAST:event_Jtable_facultyKeyReleased

    private void txt_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyPressed

    }//GEN-LAST:event_txt_searchKeyPressed

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
          try {
            DefaultTableModel model = (DefaultTableModel) Jtable_faculty.getModel();
            model.setRowCount(0); // Clear existing rows

            if (txt_search.getText() != null && !txt_search.getText().isEmpty()) {
                // If the search text is not empty, perform the search
                f.fillFacultyJTable(Jtable_faculty, txt_search.getText());
            } else {
                // If the search text is empty, display all records
                f.fillFacultyJTable(Jtable_faculty, "");
            }
        } catch (Exception e) {
            String errorMessage = "<html><b style='font-size: 12px;'>" + e.getMessage() + "</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
        }
      
    }//GEN-LAST:event_txt_searchKeyReleased

    private void txt_searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyTyped

    }//GEN-LAST:event_txt_searchKeyTyped

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_searchActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
       //Delete Record

       
        if (txt_fid.getText().equals("")) {
            String errorMessage = "<html><b style='font-size: 12px;'>No Faculty Selected...</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
        }
        else {
            int id = Integer.valueOf(txt_fid.getText());

           
            f.insertUpdateDeleteFaculty('d', id, null, null, null, null, null, null, null, null, null);

            // Refresh the faculty table
            Jtable_faculty.setModel(new DefaultTableModel(null, new Object[] {"id","Program","Course", "FacultyName","FatherName","Gender","DOB","Email","MobileNo","Address"}));
            f.fillFacultyJTable(Jtable_faculty, "");

            clearFields();
        }

    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
             if (!txt_fid.getText().equals("")) {
            if (verifyText()) {
                int id = Integer.valueOf(txt_fid.getText());
                String email = txt_email.getText();
                String mobileno = txt_mob.getText();

                // Check if email or mobile number already exists
                boolean emailExists = f.isEmailExist(id, email);
                boolean mobileNoExists = f.isMobileNoExist(id, mobileno);

                if (!(emailExists || mobileNoExists)) {
                    String program = cb_program.getSelectedItem().toString();
                    String course = cb_course.getSelectedItem().toString();
                    String tname = txt_tnm.getText();
                    String fname = txt_fnm.getText();
                    String address = txt_address.getText();

                    String gender = rdmale.isSelected() ? rdmale.getText() : rdfemale.getText();

                    SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd");
                    String bdate = dateformat.format(txt_dob.getDate());

                    // Check if the course is already assigned to another faculty
                    if (f.isCourseAssigned(id, course)) {
                        String message = "<html><b style='font-size: 12px;'>Course is already assigned to another faculty...</b></html>";
                        JOptionPane.showMessageDialog(null, message, "Error", JOptionPane.WARNING_MESSAGE);
                        return; // Exit the method without performing the update
                    }

                    f.insertUpdateDeleteFaculty('u', id, program, course, tname, fname, gender, bdate, email, mobileno, address);


                    DefaultTableModel model = (DefaultTableModel) Jtable_faculty.getModel();
                    model.setRowCount(0); // Clear existing rows
                    f.fillFacultyJTable(Jtable_faculty, "");

                    // Clear all input fields after successful update
                   clearFields();
                } else {
                    // Display error message based on existing email or mobile number
                    String errorMessage = "<html><b style='font-size: 12px;'>";
                    if (emailExists) {
                        errorMessage += "Email already exists.";
                    }
                    if (mobileNoExists) {
                        errorMessage += "<br>Mobile number already exists.";
                    }
                    errorMessage += "</b></html>";
                    JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
        else {
         String errorMessage = "<html><b style='font-size: 12px;'>Please Select a Faculty to Edit..</b></html>";
         JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
      this.dispose();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void lbl_backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_backMouseClicked
        Home h = new Home();
        h.setTitle("Home");
        h.setVisible(true);
        h.pack();
        h.setLocationRelativeTo(null);
        h.lbl_username.setText("Welcome " + UserSession.getUsername());
        this.dispose();
    }//GEN-LAST:event_lbl_backMouseClicked

    private void lbl_backMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_backMouseEntered
        Color c1 = new Color(0,51,51);
        panel_back.setBackground(c1);
    }//GEN-LAST:event_lbl_backMouseEntered

    private void lbl_backMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_backMouseExited
        Color c1 = new Color(0,102, 102);
        panel_back.setBackground(c1);
    }//GEN-LAST:event_lbl_backMouseExited

    private void lbl_logout1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_logout1MouseClicked
       int option = JOptionPane.showConfirmDialog(null, "<html><b style='font-size: 14px;color: #111810;'>Are you sure you want to logout?</b></html>", "Logout", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
               UserSession.setUsername(null);
               LoginForm lf = new LoginForm();
               lf.setTitle("LoginForm");
               lf.setLocationRelativeTo(null);
               lf.setVisible(true);
               this.dispose();
         }
    }//GEN-LAST:event_lbl_logout1MouseClicked

    private void lbl_logout1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_logout1MouseEntered
        Color c1 = new Color(0,51,51);
        panel_logout.setBackground(c1);
    }//GEN-LAST:event_lbl_logout1MouseEntered

    private void lbl_logout1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_logout1MouseExited
        Color c1 = new Color(0,102, 102);
        panel_logout.setBackground(c1);
    }//GEN-LAST:event_lbl_logout1MouseExited

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        clearFields();
        Jtable_faculty.clearSelection();
    }//GEN-LAST:event_btn_clearActionPerformed

    private void rdmaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdmaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdmaleActionPerformed

 

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageFacultyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageFacultyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageFacultyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageFacultyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ManageFacultyForm mf = new ManageFacultyForm();
                mf.setTitle("Manage Faculty");
                mf.setLocationRelativeTo(null);
                mf.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable Jtable_faculty;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_edit;
    private javax.swing.ButtonGroup buttonGroup1;
    public static javax.swing.JComboBox<String> cb_course;
    public static javax.swing.JComboBox<String> cb_program;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_address;
    private javax.swing.JLabel lbl_back;
    private javax.swing.JLabel lbl_course;
    private javax.swing.JLabel lbl_dob;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_fnm;
    private javax.swing.JLabel lbl_gender;
    private javax.swing.JLabel lbl_logout1;
    private javax.swing.JLabel lbl_mob;
    private javax.swing.JLabel lbl_search;
    private javax.swing.JLabel lbl_snm;
    private javax.swing.JPanel panel_back;
    private javax.swing.JPanel panel_logout;
    private javax.swing.JRadioButton rdfemale;
    private javax.swing.JRadioButton rdmale;
    private javax.swing.JTextField txt_address;
    private com.toedter.calendar.JDateChooser txt_dob;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_fid;
    private javax.swing.JTextField txt_fnm;
    private javax.swing.JTextField txt_mob;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_tnm;
    // End of variables declaration//GEN-END:variables
}
