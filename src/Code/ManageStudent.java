package Code;

import static Code.LoginForm.txt_user;
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.*;
import java.time.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.*;

public class ManageStudent extends javax.swing.JFrame {

    /**
     * Creates new form ManageStudent
     */
    Student std = new Student();
    
    public ManageStudent() {
        initComponents();
        std.fillStudentJTable(Jtable_stud, "");
      
        Jtable_stud.setRowHeight(40);
        Jtable_stud.setShowGrid(true);
        Jtable_stud.setGridColor(Color.BLUE);
        Jtable_stud.setSelectionBackground(Color.BLACK);
        
         // Set custom table header font and size
        JTableHeader header = Jtable_stud.getTableHeader();
        header.setFont(header.getFont().deriveFont(Font.BOLD, 16)); 

        // Center-align column headers
        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) Jtable_stud.getTableHeader().getDefaultRenderer();
        renderer.setHorizontalAlignment(JLabel.CENTER);
        
        // Set header height
        header.setPreferredSize(new Dimension(header.getWidth(), 30)); 
        
         // Set border for the table
        Border border = BorderFactory.createLineBorder(Color.GRAY, 2);
        Jtable_stud.setBorder(border);
       
         // Set border for the header
        header.setBorder(border);
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbl_snm = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbl_fnm = new javax.swing.JLabel();
        lbl_dob = new javax.swing.JLabel();
        lbl_gender = new javax.swing.JLabel();
        lbl_email = new javax.swing.JLabel();
        lbl_mob = new javax.swing.JLabel();
        lbl_address = new javax.swing.JLabel();
        txt_snm = new javax.swing.JTextField();
        txt_fnm = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        txt_mob = new javax.swing.JTextField();
        rdmale = new javax.swing.JRadioButton();
        rdfemale = new javax.swing.JRadioButton();
        btn_add = new javax.swing.JButton();
        txt_dob = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_address = new javax.swing.JTextArea();
        btn_cancel = new javax.swing.JButton();
        lbl_enrollment = new javax.swing.JLabel();
        cb_course = new javax.swing.JComboBox<>();
        lbl_course1 = new javax.swing.JLabel();
        txt_eno = new javax.swing.JTextField();
        lbl_search = new javax.swing.JLabel();
        txt_sid = new javax.swing.JTextField();
        btn_edit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Jtable_stud = new javax.swing.JTable();
        lbl_sid1 = new javax.swing.JLabel();
        txt_search = new javax.swing.JTextField();
        btn_delete = new javax.swing.JButton();
        cb_sem = new javax.swing.JComboBox<>();
        lbl_sem = new javax.swing.JLabel();
        panel_back = new javax.swing.JPanel();
        lbl_back = new javax.swing.JLabel();
        panel_logout1 = new javax.swing.JPanel();
        lbl_logout1 = new javax.swing.JLabel();
        btn_clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Manage Students");

        lbl_snm.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_snm.setText("Student's Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        lbl_fnm.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_fnm.setText("Father's Name");

        lbl_dob.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_dob.setText("Date Of Birth");

        lbl_gender.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_gender.setText("Gender");

        lbl_email.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_email.setText("Email:");

        lbl_mob.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_mob.setText("Mobile No");

        lbl_address.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_address.setText("Address");

        txt_snm.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        txt_fnm.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        txt_email.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        txt_mob.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_mob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_mobActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdmale);
        rdmale.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdmale.setText("Male");

        buttonGroup1.add(rdfemale);
        rdfemale.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdfemale.setText("Female");

        btn_add.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_add.setText("Add");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        txt_dob.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txt_address.setColumns(20);
        txt_address.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_address.setRows(5);
        jScrollPane1.setViewportView(txt_address);

        btn_cancel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        lbl_enrollment.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_enrollment.setText("Enrollment NO");

        cb_course.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cb_course.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BCA", "BBA" }));

        lbl_course1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_course1.setText("Program");

        txt_eno.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        lbl_search.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_search.setText("Enter Value to Search: ");

        txt_sid.setEditable(false);
        txt_sid.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        btn_edit.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        Jtable_stud.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Jtable_stud.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "StudentName", "FatherName", "EnrollmentNo", "Gender", "DOB", "Email", "MobileNo", "Semester", "Course", "Address"
            }
        ));
        Jtable_stud.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Jtable_studMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Jtable_studMouseExited(evt);
            }
        });
        Jtable_stud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Jtable_studKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(Jtable_stud);

        lbl_sid1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_sid1.setText("Student's ID");

        txt_search.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_searchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_searchKeyTyped(evt);
            }
        });

        btn_delete.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        cb_sem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cb_sem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", " " }));

        lbl_sem.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_sem.setText("Semester");

        panel_back.setBackground(new java.awt.Color(0, 102, 102));

        lbl_back.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbl_back.setForeground(new java.awt.Color(255, 255, 255));
        lbl_back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/back-button.png"))); // NOI18N
        lbl_back.setText("   Back");
        lbl_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_backMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_backMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_backMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panel_backLayout = new javax.swing.GroupLayout(panel_back);
        panel_back.setLayout(panel_backLayout);
        panel_backLayout.setHorizontalGroup(
            panel_backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
            .addGroup(panel_backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_backLayout.createSequentialGroup()
                    .addContainerGap(40, Short.MAX_VALUE)
                    .addComponent(lbl_back, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(24, Short.MAX_VALUE)))
        );
        panel_backLayout.setVerticalGroup(
            panel_backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 91, Short.MAX_VALUE)
            .addGroup(panel_backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_backLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_back)
                    .addContainerGap(14, Short.MAX_VALUE)))
        );

        panel_logout1.setBackground(new java.awt.Color(0, 102, 102));

        lbl_logout1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbl_logout1.setForeground(new java.awt.Color(255, 255, 255));
        lbl_logout1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        lbl_logout1.setText("   Logout");
        lbl_logout1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_logout1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_logout1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_logout1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout panel_logout1Layout = new javax.swing.GroupLayout(panel_logout1);
        panel_logout1.setLayout(panel_logout1Layout);
        panel_logout1Layout.setHorizontalGroup(
            panel_logout1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
            .addGroup(panel_logout1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel_logout1Layout.createSequentialGroup()
                    .addGap(0, 30, Short.MAX_VALUE)
                    .addComponent(lbl_logout1)
                    .addGap(0, 31, Short.MAX_VALUE)))
        );
        panel_logout1Layout.setVerticalGroup(
            panel_logout1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 91, Short.MAX_VALUE)
            .addGroup(panel_logout1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel_logout1Layout.createSequentialGroup()
                    .addGap(0, 13, Short.MAX_VALUE)
                    .addComponent(lbl_logout1)
                    .addGap(0, 14, Short.MAX_VALUE)))
        );

        btn_clear.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_snm, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_fnm)
                            .addComponent(lbl_enrollment)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_dob)
                            .addComponent(lbl_email)
                            .addComponent(lbl_mob)
                            .addComponent(lbl_course1)
                            .addComponent(lbl_address)
                            .addComponent(lbl_sem)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lbl_sid1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_eno, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7))
                            .addComponent(txt_mob, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_sid, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_fnm, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdmale, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rdfemale, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_snm, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_course, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_sem, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(lbl_search, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(174, 174, 174)
                                .addComponent(panel_back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(panel_logout1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 939, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(24, 24, 24)
                                        .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 24, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_sid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_sid1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(23, 23, 23))
                            .addComponent(panel_back, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel_logout1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_search, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_snm, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_snm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbl_fnm)
                                    .addComponent(txt_fnm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbl_enrollment)
                                    .addComponent(txt_eno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbl_gender)
                                    .addComponent(rdmale, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rdfemale, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_dob)
                            .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(lbl_email))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_mob)
                            .addComponent(txt_mob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_sem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_sem))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_course1)
                            .addComponent(cb_course, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lbl_address)))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        //Delete Record

        if(txt_sid.getText().equals(""))
        {
            String errorMessage = "<html><b style='font-size: 12px;'>No Student Selected...</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            int id = Integer.valueOf(txt_sid.getText());
            std.insertUpdateDeleteStudent('d', id, null, null, -1, null, null, null,  null, -1, null, null);

            ManageStudent.Jtable_stud.setModel(new DefaultTableModel(null, new Object[] {"id","StudentName","FatherName","EnrollmentNo","Gender","DOB","Email","MobileNo","Semester","Course","Address"}));
            std.fillStudentJTable(Jtable_stud, "");

            clearFields();
        }

    }//GEN-LAST:event_btn_deleteActionPerformed

    private void txt_searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyTyped

    }//GEN-LAST:event_txt_searchKeyTyped

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        Jtable_stud.setModel(new DefaultTableModel(null, new Object[] {"id","StudentName","FatherName","EnrollmentNo","Gender","DOB","Email","MobileNo","semester","Course","Address"}));

        std.fillStudentJTable(Jtable_stud, txt_search.getText());
    }//GEN-LAST:event_txt_searchKeyReleased

    private void txt_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyPressed

    }//GEN-LAST:event_txt_searchKeyPressed

    private void Jtable_studKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtable_studKeyReleased

        rowIndex = Jtable_stud.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)Jtable_stud.getModel();

        if(evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN)
        {

            if(model.getValueAt(rowIndex, 4).toString().equals("Male"))
            {
                rdmale.setSelected(true);
                rdfemale.setSelected(false);
            }
            else
            {
                rdfemale.setSelected(true);
                rdmale.setSelected(false);
            }

            txt_sid.setText (model.getValueAt(rowIndex, 0).toString());
            txt_snm.setText (model.getValueAt(rowIndex, 1).toString());
            txt_fnm.setText (model.getValueAt(rowIndex, 2).toString());
            txt_eno.setText (model.getValueAt(rowIndex, 3).toString());
            txt_email.setText (model.getValueAt(rowIndex, 6).toString());
            txt_mob.setText (model.getValueAt(rowIndex, 7).toString());
            cb_sem.setSelectedItem(model.getValueAt(rowIndex, 8).toString());
            cb_course.setSelectedItem(model.getValueAt(rowIndex, 9).toString());
            txt_address.setText (model.getValueAt(rowIndex, 10).toString());

            Date bdate;

            try {
                bdate = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(rowIndex, 5).toString());
                txt_dob.setDate(bdate);
            } catch (ParseException e) {
                String errorMessage = "<html><b style='font-size: 12px;'>"+e.getMessage()+"</b></html>";
                JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            }
        }

    }//GEN-LAST:event_Jtable_studKeyReleased

    private int selectedRowIndex = -1;
    private void Jtable_studMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Jtable_studMouseClicked

        rowIndex = Jtable_stud.getSelectedRow();
        // Check if the row index is already selected
        if (rowIndex == selectedRowIndex) {
            // Deselect the row
           Jtable_stud.getSelectionModel().clearSelection();
            // Clear form data
            clearFields();
            // Reset selectedRowIndex
            selectedRowIndex = -1;
        } 
        else{
            DefaultTableModel model = (DefaultTableModel)Jtable_stud.getModel();


            if(model.getValueAt(rowIndex, 4).toString().equals("Male"))
            {
                rdmale.setSelected(true);
                rdfemale.setSelected(false);
            }
            else
            {
                rdfemale.setSelected(true);
                rdmale.setSelected(false);
            }

            txt_sid.setText (model.getValueAt(rowIndex, 0).toString());
            txt_snm.setText (model.getValueAt(rowIndex, 1).toString());
            txt_fnm.setText (model.getValueAt(rowIndex, 2).toString());
            txt_eno.setText (model.getValueAt(rowIndex, 3).toString());
            txt_email.setText (model.getValueAt(rowIndex, 6).toString());
            txt_mob.setText (model.getValueAt(rowIndex, 7).toString());
            cb_sem.setSelectedItem(model.getValueAt(rowIndex, 8).toString());
            cb_course.setSelectedItem(model.getValueAt(rowIndex, 9).toString());
            txt_address.setText (model.getValueAt(rowIndex, 10).toString());

            // Date bdate;

            try {
                String dobValue = model.getValueAt(rowIndex, 5).toString();
                if (dobValue != null && !dobValue.isEmpty()) {
                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                    Date bdate = dateFormat.parse(dobValue);
                    txt_dob.setDate(bdate);
                } else {
                    txt_dob.setDate(null); // Set to null or handle empty date as needed
                }
            } catch (ParseException e) {
                String errorMessage = "<html><b style='font-size: 12px;'>" + e.getMessage() + "</b></html>";
                JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            }
            
            // Set selectedRowIndex
            selectedRowIndex = rowIndex;
        }
    }//GEN-LAST:event_Jtable_studMouseClicked

    
    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        if (!txt_sid.getText().equals("")) {
            if (verifyText()) {
                int id = Integer.valueOf(txt_sid.getText());
                String email = txt_email.getText();
                String mobileno = txt_mob.getText();
                int eno = Integer.parseInt(txt_eno.getText());
                
                // Check if email or mobile number already exists
                boolean emailExists = std.isEmailExist(id, email);
                boolean mobileNoExists = std.isMobileNoExist(id, mobileno);
                boolean enrollmentExists = std.isEnrollmentNoExist(id, eno);
                 
                if (!(emailExists || mobileNoExists || enrollmentExists)) {
                    String sname = txt_snm.getText();
                    String fname = txt_fnm.getText();
                    
                    String address = txt_address.getText();
                    int sem = Integer.parseInt(cb_sem.getSelectedItem().toString()); // Assuming cb_sem represents the semester
                    String course = cb_course.getSelectedItem().toString();

                    String gender = rdmale.isSelected() ? rdmale.getText() : rdfemale.getText();

                    SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd");
                    String bdate = dateformat.format(txt_dob.getDate());

                    Student std = new Student();
                    std.insertUpdateDeleteStudent('u', id, sname, fname, eno, gender, bdate, email, mobileno, sem, course, address);

                    ManageStudent.Jtable_stud.setModel(new DefaultTableModel(null, new Object[] {"id", "StudentName", "FatherName", "EnrollmentNo", "Gender", "DOB", "Email", "MobileNo", "Semester", "Course", "Address"}));
                    std.fillStudentJTable(ManageStudent.Jtable_stud, "");

                    // Clear all input fields after successful addition
                    clearFields();
                } else {
                    // Display error message based on existing email or mobile number
                    String errorMessage = "<html><b style='font-size: 12px;'>";
                    if (emailExists) {
                        errorMessage += "Email already exists.";
                    }
                    if (mobileNoExists) {
                        errorMessage += "<br>Mobile number already exists.";
                    }
                    if (enrollmentExists) {
                        errorMessage += "<br>Enrollment No. already exists.";
                    }
                    errorMessage += "</b></html>";
                    JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
        else {
            String errorMessage = "<html><b style='font-size: 12px;'>Please Select Field to edit...</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed

        if(verifyText())
        {
            String email = txt_email.getText();
            String mobileno = txt_mob.getText();
            int eno = Integer.parseInt(txt_eno.getText());
            
            // Check if email or mobile number already exists
            boolean emailExists = std.isEmailExist(null, email);
            boolean mobileNoExists = std.isMobileNoExist(null, mobileno);
            boolean enrollmentExists = std.isEnrollmentNoExist(null, eno);

            if (!(emailExists || mobileNoExists || enrollmentExists))
            {
                String sname = txt_snm.getText();
                String fname = txt_fnm.getText();
                String address = txt_address.getText();
                String course = cb_course.getSelectedItem().toString();
                int sem = Integer.parseInt(cb_sem.getSelectedItem().toString());

                String gender="";
                if(rdmale.isSelected()){
                    gender=rdmale.getText();
                }
                else{
                    gender=rdfemale.getText();
                }

                SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd");
                String bdate = dateformat.format(txt_dob.getDate());

                Student std = new Student();
                std.insertUpdateDeleteStudent('i', null, sname, fname, eno, gender, bdate, email, mobileno, sem, course, address);
                DefaultTableModel model = (DefaultTableModel) Jtable_stud.getModel();
                model.setRowCount(0);
                std.fillStudentJTable(Jtable_stud, "");
//                if (ManageStudent.Jtable_stud != null) {
//                    ManageStudent.Jtable_stud.setModel(new DefaultTableModel(null, new Object[] {"id","StudentName","FatherName","EnrollmentNo","Gender","DOB","Email","MobileNo","Course","Address"}));
//                    std.fillStudentJTable(ManageStudent.Jtable_stud, "");
//                }

                // Clear all input fields after successful addition
                clearFields();          
            }
            else {
                // Display error message based on existing email or mobile number
                String errorMessage = "<html><b style='font-size: 12px;'>";
                if (emailExists) {
                    errorMessage += "Email already exists.";
                }
                if (mobileNoExists) {
                    errorMessage += "<br>Mobile number already exists.";
                }
                if (enrollmentExists) {
                    errorMessage += "<br>Enrollment No. already exists.";
                }
                errorMessage += "</b></html>";
                JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            }
        }

        /*AddStudent as = new AddStudent();
        as.setVisible(true);
        as.pack();
        as.setLocationRelativeTo(null);   //to keep it center
        as.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);*/

        //Close the cyrrent form
        //this.dispose();
    }//GEN-LAST:event_btn_addActionPerformed

    private void txt_mobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_mobActionPerformed
        // Allow only number
        /*
        String input = txt_mob.getText();

        // Check if the input matches the specified regular expression
        if (input.matches("^[6-9][0-9]{9}$")) {
            // Valid mobile number
            // You can add your code here for valid input
            System.out.println("Valid mobile number: " + input);
        } else {
            // Invalid mobile number
            // You can add your code here for invalid input
            JOptionPane.showMessageDialog(this, "Invalid mobile number. Please enter a valid Indian mobile number starting with a digit between 6 and 9.", "Error", JOptionPane.ERROR_MESSAGE);
        }*/
    }//GEN-LAST:event_txt_mobActionPerformed

    private void lbl_backMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_backMouseEntered
        Color c1 = new Color(0,51,51);
        panel_back.setBackground(c1);
    }//GEN-LAST:event_lbl_backMouseEntered

    private void lbl_backMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_backMouseExited
        Color c1 = new Color(0,102, 102);
        panel_back.setBackground(c1);
    }//GEN-LAST:event_lbl_backMouseExited

    private void lbl_backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_backMouseClicked
        Home h = new Home();
        h.setTitle("Home");
        h.setVisible(true);
        h.pack();
        h.setLocationRelativeTo(null);
        h.lbl_username.setText("Welcome " + UserSession.getUsername());
        this.dispose();   
    }//GEN-LAST:event_lbl_backMouseClicked

    private void lbl_logout1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_logout1MouseClicked
       int option = JOptionPane.showConfirmDialog(null, "<html><b style='font-size: 14px;color: #111810;'>Are you sure you want to logout?</b></html>", "Logout", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
               UserSession.setUsername(null);
               LoginForm lf = new LoginForm();
               lf.setTitle("LoginForm");
               lf.setLocationRelativeTo(null);
               lf.setVisible(true);
               this.dispose();
         }
    }//GEN-LAST:event_lbl_logout1MouseClicked

    private void lbl_logout1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_logout1MouseEntered
       Color c1 = new Color(0,51,51);
       panel_logout1.setBackground(c1);
    }//GEN-LAST:event_lbl_logout1MouseEntered

    private void lbl_logout1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_logout1MouseExited
        Color c1 = new Color(0,102, 102);
        panel_logout1.setBackground(c1);
    }//GEN-LAST:event_lbl_logout1MouseExited

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
       clearFields();
       Jtable_stud.clearSelection();
    }//GEN-LAST:event_btn_clearActionPerformed

    private void Jtable_studMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Jtable_studMouseExited
        // TODO add your handling code here:
         //Jtable_stud.clearSelection();
    }//GEN-LAST:event_Jtable_studMouseExited

       public boolean verifyText() {
        String sname = txt_snm.getText();
        String fname = txt_fnm.getText();
        String enoStr = txt_eno.getText();
        String email = txt_email.getText();
        String mobileno = txt_mob.getText();
        String address = txt_address.getText();
        String id = txt_sid.getText();
         
       // Check if any of the required fields is empty
        if (sname.isEmpty() || fname.isEmpty() || enoStr.isEmpty() || email.isEmpty() || mobileno.isEmpty() || address.isEmpty() || txt_dob.getDate() == null) {
            String errorMessage = "<html><b style='font-size: 12px;'>Please fill in all the required fields...</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            return false; // At least one required field is empty
        }

        // Choose a date higher than the current date
        /*
        if(txt_dob.getDate().compareTo(new Date()) > 0){
            String errorMessage = "<html><b style='font-size: 12px;'>No Student From The Future are allowed...</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.ERROR_MESSAGE);
            return false; // dob number is not a valid integer
        }*/
        
        // Check if date of birth is valid (students are required to be at least 17 years old)
       
        Calendar currentDateMinus17 = new GregorianCalendar();
        currentDateMinus17.add(Calendar.YEAR, -17);

        Calendar dob = new GregorianCalendar();
        dob.setTime(txt_dob.getDate());

        if (dob.after(currentDateMinus17)) {
            String errorMessage = "<html><b style='font-size: 12px;'>No Student Under 17 Years Old are allowed...</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            return false; // Date of birth is not valid
        }

       // Check if eno is a valid integer
       
        if (!enoStr.matches("\\d+")) {
            String errorMessage = "<html><b style='font-size: 12px;'>Enrollment number must be a valid integer...</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            return false; // Enrollment number is not a valid integer
        }
        
         // Check if email address is valid or not
         
        if(!email.matches("^[a-zA-Z0-9.-_]+@[a-zA-Z0-9-]+\\.[a-zA-Z.]{2,5}$"))
        {
            String errorMessage = "<html><b style='font-size: 12px;'>Invalid Email. Please enter a valid Email Address..</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            return false; // Email is not valid
        }
         
         
         //Check if mobileno is a valid Indian mobile number
        if (!mobileno.matches("^[6-9][0-9]{9}$")) {
            String errorMessage = "<html><b style='font-size: 12px;'>Invalid mobile number. Please enter a valid Indian mobile number.</b></html>";
            JOptionPane.showMessageDialog(null, errorMessage, "Error", JOptionPane.WARNING_MESSAGE);
            return false; // Mobile number is not valid
        }

        return true; // All required fields are non-empty
        
      }
       
    
       //Clear all input fields
        private void clearFields() {
            
            txt_snm.setText("");
            txt_fnm.setText("");
            txt_eno.setText("");
            txt_email.setText("");
            txt_mob.setText("");
            txt_address.setText("");
            txt_sid.setText("");
            cb_sem.setSelectedIndex(0); 
            cb_course.setSelectedIndex(0); 
            buttonGroup1.clearSelection();
            txt_dob.setDate(null); 
        }
        
        int rowIndex ;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ManageStudent mf = new ManageStudent();
                mf.setTitle("Manage Student");
                mf.setLocationRelativeTo(null);
                mf.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable Jtable_stud;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_edit;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cb_course;
    private javax.swing.JComboBox<String> cb_sem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_address;
    private javax.swing.JLabel lbl_back;
    private javax.swing.JLabel lbl_course1;
    private javax.swing.JLabel lbl_dob;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_enrollment;
    private javax.swing.JLabel lbl_fnm;
    private javax.swing.JLabel lbl_gender;
    private javax.swing.JLabel lbl_logout1;
    private javax.swing.JLabel lbl_mob;
    private javax.swing.JLabel lbl_search;
    private javax.swing.JLabel lbl_sem;
    private javax.swing.JLabel lbl_sid1;
    private javax.swing.JLabel lbl_snm;
    private javax.swing.JPanel panel_back;
    private javax.swing.JPanel panel_logout1;
    private javax.swing.JRadioButton rdfemale;
    private javax.swing.JRadioButton rdmale;
    private javax.swing.JTextArea txt_address;
    private com.toedter.calendar.JDateChooser txt_dob;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_eno;
    private javax.swing.JTextField txt_fnm;
    private javax.swing.JTextField txt_mob;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_sid;
    private javax.swing.JTextField txt_snm;
    // End of variables declaration//GEN-END:variables
}
